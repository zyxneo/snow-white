{"version":3,"sources":["webpack:///./src/i18n/redirect.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_baseToString.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/lodash/toFinite.js","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_baseClamp.js","webpack:///./node_modules/lodash/startsWith.js","webpack:///./node_modules/browser-lang/dist/index.js","webpack:///./node_modules/lodash/_Symbol.js"],"names":["Redirect","props","_this","_PureComponent","call","this","langKeys","_index__WEBPACK_IMPORTED_MODULE_5__","a","map","language","value","pathname","location","window","detected","localStorage","getItem","browser_lang__WEBPACK_IMPORTED_MODULE_4___default","languages","fallback","newUrl","Object","gatsby_link__WEBPACK_IMPORTED_MODULE_3__","withPrefix","setItem","replace","render","react__WEBPACK_IMPORTED_MODULE_2___default","createElement","t","react__WEBPACK_IMPORTED_MODULE_2__","PureComponent","__webpack_exports__","default","s","237","n","e","baseGetTag","__webpack_require__","isObjectLike","module","exports","symbolTag","Symbol","arrayMap","isArray","isSymbol","symbolProto","prototype","symbolToString","toString","baseToString","result","type","isObject","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","NaN","other","valueOf","isBinary","test","slice","toNumber","300","toFinite","remainder","301","nativeObjectToString","objectProto","hasOwnProperty","symToStringTag","toStringTag","isOwn","tag","unmasked","getRawTag","objectToString","Array","array","iteratee","index","length","global","freeGlobal","freeSelf","self","root","Function","number","lower","upper","baseClamp","toInteger","string","target","position","defineProperty","obj","_startsWith2","__esModule","getBrowserLang","navigator","browserLanguage","userLanguage","systemLanguage","normalizeCode","code","toLowerCase","options","match","filter","lang"],"mappings":"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","file":"component---src-i-18-n-redirect-js-1a915bee1e7cc256f3da.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport { withPrefix } from 'gatsby-link'\nimport browserLang from 'browser-lang'\nimport { languages } from './index'\n\nclass Redirect extends PureComponent {\n  constructor(props) {\n    super(props)\n\n    const langKeys = languages.map(language => language.value)\n    const { pathname } = props.location\n\n    // Skip build, Browsers only\n    if (typeof window !== 'undefined') {\n      const detected = window.localStorage.getItem('language')\n        || browserLang({\n          languages: langKeys,\n          fallback: 'en',\n        })\n\n      const newUrl = withPrefix(`/${detected}${pathname}`)\n      window.localStorage.setItem('language', detected)\n      window.location.replace(newUrl)\n    }\n  }\n\n  render() {\n    return <div />\n  }\n}\n\nexport default Redirect\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nmodule.exports = baseClamp;\n","var baseClamp = require('./_baseClamp'),\n    baseToString = require('./_baseToString'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/**\n * Checks if `string` starts with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=0] The position to search from.\n * @returns {boolean} Returns `true` if `string` starts with `target`,\n *  else `false`.\n * @example\n *\n * _.startsWith('abc', 'a');\n * // => true\n *\n * _.startsWith('abc', 'b');\n * // => false\n *\n * _.startsWith('abc', 'b', 1);\n * // => true\n */\nfunction startsWith(string, target, position) {\n  string = toString(string);\n  position = position == null\n    ? 0\n    : baseClamp(toInteger(position), 0, string.length);\n\n  target = baseToString(target);\n  return string.slice(position, position + target.length) == target;\n}\n\nmodule.exports = startsWith;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _startsWith = require('lodash/startsWith');\n\nvar _startsWith2 = _interopRequireDefault(_startsWith);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getBrowserLang() {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  var lang = window.navigator.languages && window.navigator.languages[0] || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage || window.navigator.systemLanguage || null;\n\n  return lang;\n}\n\nfunction normalizeCode(code) {\n  return code.toLowerCase().replace(/-/, '_');\n}\n\nfunction getPreferredLanguage(options) {\n  if (!options) {\n    return getBrowserLang();\n  }\n\n  var languages = options.languages,\n      fallback = options.fallback;\n\n  if (!options.languages) {\n    return fallback;\n  }\n\n  // some browsers report language as en-US instead of en_US\n  var browserLanguage = normalizeCode(getBrowserLang());\n\n  if (!browserLanguage) {\n    return fallback;\n  }\n\n  var match = languages.filter(function (lang) {\n    return normalizeCode(lang) === browserLanguage;\n  });\n\n  if (match.length > 0) {\n    return match[0] || fallback;\n  }\n\n  // en == en_US\n  var matchCodeOnly = languages.filter(function (lang) {\n    return (0, _startsWith2.default)(browserLanguage, lang);\n  });\n  return matchCodeOnly[0] || fallback;\n}\n\nexports.default = getPreferredLanguage;","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n"],"sourceRoot":""}